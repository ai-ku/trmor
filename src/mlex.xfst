!! Ambiguous suffixes: 
!! {+In}, {+Ir}, {+mA}, {+mIş}, {+sA}, {+YAcAk}, {+nA}, {+sIn}, {+z}, {+Ar}, {+CA}, {+DIr}, {+sI}

define Morphemes [
    "+A1pl"		-> {+YIz},	!! {+k}, {+lIm}, {+Iz}?
    "+A1pl2" 		-> {+k},	!! after past
    "+A1pl3" 		-> {+lIm},	!! after opt
    "+A1sg"		-> {+YIm},	!! {+m}, {+Im}?
    "+A1sg2" 		-> {+m},	!! after past
    "+A2pl"		-> {+sInIz},	!! {+YIn}, {+YInIz}, {+nIz}, {+nIzA}, {+InIz}
    "+A2pl2" 		-> {+nIz},	!! after past
    "+A2pl3" 		-> {+YInIz},	!! after imp
    "+A2pl3" 		-> {+YIn},	!! after imp
    "+A2pl4" 		-> {+nIzA},	!! after imp2
    "+A2sg"		-> {+sIn},	!! 0, {+n}, {+nA}, {+In}?
    "+A2sg2" 		-> {+n},	!! after past
    "+A2sg3" 		-> 0,		!! after imp
    "+A2sg4" 		-> {+nA},	!! after imp2
    "+A3pl"		-> {+lAr},	!! {+sInlAr}, {nlAr}
    "+A3pl3" 		-> {+sInlAr},	!! after imp
    "+A3sg"		-> 0,		!! {+sIn}
    "+A3sg3" 		-> {+sIn},	!! after imp
    "+Abl"		-> {+DAn},	!! {+ndAn}
    "+Able"		-> {+YAbil},	!! 0 if Neg
    "+Acc"		-> {+YI},	!! {+nI}
    "+Acquire"		-> {+lAn},
    "+ActOf"		-> {+mAcA},
    "+Adamantly"	-> {+YAsIyA},
    "+Adj"		-> 0,
    "+Adverb"		-> 0,
    "+AfterDoingSo"	-> {+YIp},
    "+Agt"		-> {+CI},	!! {+YIcI}
    "+Agt2"		-> {+YIcI},	!! "+Verb" NoDB "^DB" NoDB _
    "+Almost"		-> {+YAyaz},
    "+Aor"		-> {+AIr},	!! 0, {+z}, {+Ar}, {+r}
    "+AorPart"		-> {+AIr},	!! 0, {+z}, {+Ar}, {+r}
    "+AsIf"		-> {+CA},	!! {+CAsInA}
    "+AsIf2"		-> {+CAsInA},	!! "+Adverb" _ 
    "+AsLongAs"		-> {+DIkçA},
    "+Become"		-> {+lAş},
    "+ByDoingSo"	-> {+YArAk},
    "+Card"		-> 0,
    "+Caus"		-> {+DIrt},	!! {+DHr}, {+Ar}, {+Ir}, {+It}, {+t}
    "+Caus1"		-> {+Ir},
    "+Caus2"		-> {+It},
    "+Caus3"		-> {+Ar},
    "+Caus4"		-> {+Art},
    "+Cond"		-> {+YsA},	!! {+sA}
    "+Conj"		-> 0,
    "+Continue"		-> {+YAgit},
    "+Cop"		-> {+DIr},
    "+Dat"		-> {+YA},	!! {+nA}
    "+Demons"		-> 0,
    "+Desr"		-> {+sA},
    "+Det"		-> 0,
    "+Dim"		-> {+CIk},	!! {+cIm}?
    "+Dist"		-> 0,
    "+Dup"		-> 0,
    "+Equ"		-> {+CA},	!! {+ncA}
    "+EverSince"	-> {+YAgel},
    "+FeelLike"		-> {+YAsI},
    "+Fut"		-> {+YAcAk},
    "+FutPart"		-> {+YAcAk},
    "+Gen"		-> {+NIn},	!! {+nIm}
    "+Hastily"		-> {+YIver},
    "+Imp"		-> 0,
    "+Imp2"		-> {+sA},
    "+InBetween"	-> {+arası},	!! {+lArarası}?
    "+Inf1"		-> {+mAk},
    "+Inf2"		-> {+mA},
    "+Inf3"		-> {+YIş},
    "+Ins"		-> {+YlA},
    "+Interj"		-> 0,
    "+JustLike"		-> {+ImsI},	!! {+sI}?
    "+Loc"		-> {+DA},	!! {+ndA},
    "+Ly"		-> {+CA},
    "+Narr"		-> {+mIş},
    "+Narr2"		-> {+YmIş},
    "+NarrPart"		-> {+mIş},
    "+Neces"		-> {+mAlI},
    "+Neg"		-> {+mA},	!! {+YAmA}
    "+Ness"		-> {+lIk},
    "+Nom"		-> 0,
    "+NotAbleState"	-> {+YAmAzlIk},
    "+NotState"		-> {+mAzlIk},
    "+Noun"		-> 0,
    "+Num"		-> 0,
    "+Opt"		-> {+YA},
    "+Ord"		-> 0,
    "+P1pl"		-> {+ImIz},
    "+P1sg"		-> {+Im},
    "+P2pl"		-> {+InIz},
    "+P2sg"		-> {+In},
    "+P3pl"		-> {+lArI},	!! {+SI}
    "+P3sg"		-> {+SI},	!! {+YI}?
    "+PCAbl"		-> 0,
    "+PCAcc"		-> 0,
    "+PCDat"		-> 0,
    "+PCGen"		-> 0,
    "+PCIns"		-> 0,
    "+PCNom"		-> 0,
    "+Pass"		-> {+Il},	!! {+In}, {+InIl}
    "+Past"		-> {+DI},
    "+Past2"		-> {+YDI},	!! {+DI},
    "+PastPart"		-> {+DIk},
    "+Pers"		-> 0,
    "+Pnon"		-> 0,
    "+Pos"		-> 0,
    "+Postp"		-> 0,
    "+Pres"		-> 0,
    "+PresPart"		-> {+YAn},
    "+Prog1"		-> {+Iyor},
    "+Prog2"		-> {+mAktA},
    "+Pron"		-> 0,
    "+Prop"		-> 0,
    "+Quant"		-> 0,
    "+Ques"		-> 0,
    "+Recip"		-> {+Iş},
    "+Reflex"		-> {+In},
    "+Rel"		-> {+ki},
    "+Related"		-> {+sAl},	!! {+k}
    "+Repeat"		-> {+YAdur},
    "+Since"		-> {+DIr},
    "+SinceDoingSo"	-> {+YAlI},
    "+Start"		-> {+YAkoy},
    "+Stay"		-> {+YAkal},
    "+Verb"		-> 0,
    "+When"		-> {+YIncA},
    "+While"		-> {+Yken},
    "+With"		-> {+lI},
    "+Without"		-> {+sIz},	!! {+nsIz}
    "+WithoutBeingAbleToHaveDoneSo"	-> {+YAmAdAn},
    "+WithoutHavingDoneSo"		-> {+mAdAn},
    "+WithoutHavingDoneSo2"		-> {+mAksIzIn},
    "+Zero"		-> 0,
    "^AR"		-> "^AR",	!! New flag for aorist suffix type
    "^CD"		-> "^CD",	!! Phonetic flag for consonant doubling
    "^CV"		-> "^CV",	!! Phonetic flag for consonant voicing
    "^DB"		-> 0,		
    "^P1"		-> 0,		!! New flag for stems with possessives
    "^P2"		-> 0,		!! New flag for stems with possessives
    "^P3"		-> "^P3",	!! New flag for compound nouns
    "^PL"		-> 0,		!! New flag for plural stems
    "^TM"		-> 0,		!! New flag indicating time words that can take "ki"
    "^VD"		-> "^VD",	!! Phonetic flag for vowel dropping
    "^VF"		-> "^VF",	!! Phonetic flag for vowel fronting
    "^Y"		-> "^Y"		!! New flag for special handling of "su", "ne"
!    "^C1"		-> 0,		!! New flag for causative suffix type
!    "^C2"		-> 0,		!! New flag for causative suffix type
!    "^C3"		-> 0,		!! New flag for causative suffix type
!    "^C4"		-> 0,		!! New flag for causative suffix type
!    "^CX"		-> 0,		!! New flag for causative suffix type
!    "^RF"		-> 0,		!! New flag for reflexives
!   "+FitFor"		-> {+lIk},	!! disappeared in latest version
];

define NoDB \"^DB"*;

define AltPoss [
    "+P1sg" -> 0	|| "^P1" NoDB _ .o.
    "+P2sg" -> 0	|| "^P2" NoDB _ .o.
    "+P3pl" -> {+SI}	|| "+A3pl" _ , ["^PL"|"^P1"|"^P2"] NoDB _ .o.
    "+Pnon" -> {+SI}	|| "^P3" NoDB _ .o.
    "+A3pl" -> 0	|| ["^PL"|"^P1"|"^P2"] NoDB _
];

define mlex AltPoss;

define NegAor [			# Default: +Er
    "+Aor"	-> 0	|| "+Neg" _ ["+A1sg"|"+A1pl"] ,,
    "+A1sg" -> {+m},
    "+A1pl" -> {+YIz}	|| "+Neg""+Aor" _
].o.[
    "+Aor"	-> {+z}	|| "+Neg" _ .o.
    "+AorPart"	-> {+z}	|| "+Neg""^DB""+Adj" _
];

define mlex [mlex .o. NegAor];

define AbleNeg [
    "+Able"	-> {+YA}	|| _ "+Neg"
];

define mlex [mlex .o. AbleNeg];

echo Composing with morphemes.

define mlex [mlex .o. Morphemes];

push mlex
