### Vowel harmony

source turk.xfst

### Lower language constraints

# Aor: +Hr +Ar +r
#      manual list for +Ar; do not need +r
define AorAr [{affet}|{ak}|{aktet}|{an}|{art}|{as}|{aş}|{at}|{ay}|{az}|{bahset}|{bak}|{bas}|{bat}|{biç}|{bin}|{bit}|{boğ}|{boz}|{böl}|{coş}|{çak}|{çal}|{çarp}|{çek}|{çık}|{çırp}|{çiz}|{çöz}|{değ}|{dik}|{dil}|{din}|{doğ}|{dol}|{don}|{dök}|{dön}|{döv}|{duy}|{düş}|{eğ}|{ek}|{em}|{emret}|{er}|{es}|{et}|{ez}|{farket}|{fethet}|{geç}|{gez}|{gir}|{git}|{giy}|{göç}|{gül}|{hallet}|{hapset}|{hisset}|{iç}|{in}|{it}|{kaç}|{kalk}|{kan}|{kap}|{kar}|{kat}|{katet}|{katlet}|{kay}|{kaybet}|{kes}|{keşfet}|{kıl}|{kır}|{kırp}|{kıy}|{kız}|{kon}|{kop}|{kork}|{koş}|{kov}|{koy}|{kur}|{kus}|{ov}|{ölç}|{öp}|{ör}|{ört}|{öv}|{reddet}|{saç}|{sar}|{sark}|{sars}|{sat}|{say}|{seç}|{sev}|{seyret}|{sez}|{sığ}|{sil}|{sok}|{sor}|{sök}|{sön}|{söv}|{sözet}|{sun}|{sür}|{sürt}|{süz}|{şaş}|{tak}|{taş}|{terket}|{tut}|{uç}|{um}|{uy}|{üz}|{yağ}|{yak}|{yan}|{yap}|{yar}|{yat}|{yaz}|{yen}|{yet}|{yık}|{yor}|{yut}|{yüz}|{zannet}];
read regex [ {Hr} -> {Ar} || AorAr %+ _ ];
compose net

# NegAor:
read regex [ {Hr} -> z || {+mA} %+ _ ];
read regex [ {Hr} -> 0   || {+mA} %+ _ {+yHz} ];
read regex [ {Hr+yHm} -> m   || {+mA} %+ _ ];

# Caus: +Ar +Hr +Ht +t +dHr
define CausAr [{çık}|{çök}|{kop}];
define CausHr [{art}|{aş}|{bat}|{bit}|{doğ}|{doy}|{düş}|{duy}|{geç}|{iç}|{kaç}|{piş}|{şiş}|{taş}|{uç}|{vazgeç}|{yat}|{yit}];
define CausHt [{ak}|{çarp}|{kork}|{ürk}];
define Consonant [b|c|ç|d|f|g|ğ|h|j|k|l|m|n|p|r|s|ş|t|v|y|z];
define Vowel [a|e|ı|i|o|ö|u|ü];

read regex [ t -> {DHr} // \[Vowel|r|l] %+ _ ];
read regex [ t -> {DHr} || .#. Consonant* Vowel Consonant* %+ _ ];
read regex [ t -> {Ar} || CausAr %+ _ ];
read regex [ t -> {Hr} || CausHr %+ _ ];
read regex [ t -> {Ht} || CausHt %+ _ ];
compose net

# Pass: +Hl +Hn +HnHl
#       +HnHl is better handled as Reflex+Pass
read regex [ l -> n || [Vowel|l] %+ H _ ];

# Opt: A1pl=+lHm
read regex [ {+yHz} -> {+lHm} || {+yA} _ ];

### Read morphotactics
read lexc verb.lexc
compose net

### Upper language constraints

# Enforce single person morpheme
# define Person ["+A1pl"|"+A1sg"|"+A2pl"|"+A2sg"|"+A3pl"|"+A3sg"];
# define Deriv  ["^DB" ["+Noun"|"+Adj"|"+Adverb"]];
# read regex [ \Person* [ Person | Deriv ] \Person* ];
# compose net
